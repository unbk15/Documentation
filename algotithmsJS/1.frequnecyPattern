// 1)Write a function called same, which accepts two arrays.
// The function should return true if every value in the array has a coresponding value
// squared in the second array.The frecuency of values must be the same

//A) Naive Solution

function same(arr1, arr2) {
  if (arr1.length === arr2.length) {
    for (let i = 0; i < arr1.length; i++) {
      let correctIndex = arr2.indexOf(arr1[i] ** 2);
      if (correctIndex === -1) {
        return false;
      }
      arr2.splice(correctIndex, 1);
    }
    return true;
  } else {
    return false;
  }
}

// console.log(same([1, 2, 3], [1, 4, 9]));

// B) The profi solution

function same(arr1, arr2) {
  if (arr1.length !== arr2.length) {
    return false;
  }
  let frequencyCounter1 = {};
  let frequencyCounter2 = {};
  for (let val of arr1) {
    frequencyCounter1[val] = (frequencyCounter1[val] || 0) + 1;
  }

  for (let val of arr2) {
    frequencyCounter2[val] = (frequencyCounter2[val] || 0) + 1;
  }

  for (let key in frequencyCounter1) {
    if (!(key ** 2 in frequencyCounter2)) {
      return false;
    }
    if (frequencyCounter2[key ** 2] !== frequencyCounter1[key]) {
      return false;
    }
  }
  return true;
}

console.log(same([1, 2, 3], [1, 4, 2]));

// 2) Anagrams
// Given two strings, write a function to determine if the second string is an anagram of the first
// An anagram is a word, phase or name formed by reaaranging the letters of another, such as cinema, formed from iceman

function validAnagram(str1, str2) {
  //1) Check the lenght of the two arrays
  if (str1.length !== str2.length) {
    return false;
  }
  // 2) Create two objects with the every letter as key and the number of times it appear in to the string
  let frequncyStr1 = {};
  let frecuencyStr2 = {};

  for (let val of str1) {
    if (frequncyStr1.hasOwnProperty(val)) {
      frequncyStr1[val] += 1;
    } else {
      frequncyStr1[val] = 1;
    }
  }

  for (let val of str2) {
    if (frecuencyStr2.hasOwnProperty(val)) {
      frecuencyStr2[val] += 1;
    } else {
      frecuencyStr2[val] = 1;
    }
  }

  // 3) Check if the two objects have he same keys

  for (let key in frequncyStr1) {
    if (!(key in frecuencyStr2)) {
      return false;
    }
    if (frequncyStr1[key] !== frecuencyStr2[key]) {
      return false;
    }
  }
  return true;
}

console.log(validAnagram("Johnyis", "Johysin"));
