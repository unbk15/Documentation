// 1) Write a function called maxSubarraySum which accepts an array of integeres and a number called n.
// The function should calculate the maximum sum of n consecutive elements in the array

// A) Naiv Way
// function maxSubarraySum(arr, num) {
//   if (num > arr.length) {
//     return null;
//   }

//   var max = -Infinity;
//   for (let i = 0; i < arr.length - num + 1; i++) {
//     temp = 0;
//     for (let j = 0; i < num; j++) {
//       temp += arr[i + j];
//     }
//     if (temp > max) {
//       max = temp;
//     }
//   }
//   return max;
// }

// B) Sliding Window Solution

// function maxSubarraySum(arr, num) {
//   let maxSum = 0;
//   let tempSum = 0;
//   if (arr.length < num) return null;
//   for (let i = 0; i < num; i++) {
//     maxSum += arr[i];
//   }
//   tempSum = maxSum;
//   for (let i = num; i < arr.length; i++) {
//     tempSum = tempSum - arr[i - num] + arr[i];
//     maxSum = Math.max(maxSum, tempSum);
//   }
//   return maxSum;
// }

// console.log(maxSubarraySum([23, 34, 23, 1, 3, 199, 20, 100], 2));
